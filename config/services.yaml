# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  locale: 'en'

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    public: false       # Allows optimizing the container by removing unused services; this also means
    # fetching services directly from the container via $container->get() won't work.
    # The best practice is to be explicit about your dependencies anyway.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/*'
    exclude: '../src/{Entity,DoctrineMigrations,Migrations,Tests,Kernel.php}'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: '../src/Controller'
    tags: ['controller.service_arguments']

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  # REST API
  jms_serializer.naming_strategy:
    alias: jms_serializer.identical_property_naming_strategy

  # apikey access for microservices
  service_provider:
    class: App\Security\ServiceProvider
    arguments: [ "@doctrine.orm.entity_manager" , "@service_container" ]
    public: true
  service_authenticator:
    class: App\Security\ServiceAuthenticator

  sensio_framework_extra.view.listener:
    alias: Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener

  # Data fixtures
  #DataFixtures\:
  #    resource: '../src/DataFixtures'
  #    tags: ['doctrine.fixture.orm']

  api_exception_subscriber:
    class: App\Exceptions\ApiExceptionSubscriber
    arguments: []
    tags:
      - { name: kernel.event_subscriber }